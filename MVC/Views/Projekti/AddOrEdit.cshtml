@model MVC.Models.mvcProjekti

@{
    /**/

    ViewBag.Title = "Create";
}

@if ((Session["LogedUserLevel"].ToString() == "Head" && Session["LogedUserId"].ToString() == Html.DisplayFor(model => model.idNadredjenog).ToString() && Html.ValueFor(model => model.status).ToString()!="False") || (Session["LogedUserLevel"].ToString() == "Administrator") || (Session["LogedUserLevel"].ToString() == "Head" && Html.DisplayFor(model => model.id).ToString() == "0"))
    {

    <h2>Add Or Edit</h2>
    

    using (Html.BeginForm(null, null, FormMethod.Post, new { id = "registration", name = "registration" }))

        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
            <h4>Employee</h4>
            <hr />
            <div class="form-group">
                @*@Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.id, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })  @*@Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger" })*@

                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Project Name</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nazivProjekta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nazivProjekta, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-2">Description</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Opis, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.idNadredjenog, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label class="control-label col-md-2">Head</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.idNadredjenog, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
                    @Html.ValidationMessageFor(model => model.idNadredjenog, "", new { @class = "text-danger" })
                    <select id="dd" name="dd" class="control-label col-md-2"></select>
                    @Html.EditorFor(model => model.NadIme, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })



                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.status, new { @class = "control-label col-md-2", @value = "true" })
                        @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" id="dugme" />
                    <input type="button" value="Update" class="btn btn-default" id="dugmeUpdate" />


                </div>
            </div>

        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}
else
{
    <br />
    <br /> 
    <br />
    <text>
        You don't have privileges to edit project if You are not Head of it or status of project is false.
        Actually You are able to edit only projects where You are Head and where status are true.
    </text>
}
@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")

    <script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/additional-methods.min.js"></script>



    <script type="text/javascript">

        $(document).ready(function() {
          //  alert("@Html.ValueFor(model => model.status).ToString()");
            $('#loginLink')
                .html(
                    '<a href="../Home/AfterLogin">@Session["LogedUserUsername"].ToString()</a><a href="../Home/AfterLogin">Logout</a>');

            if (("@Session["LogedUserLevel"].ToString()" == "Head") || ("@Session["LogedUserLevel"].ToString()" ==
                "Head" &&
                @Html.DisplayFor(model => model.id).ToString() == "0")) {

                $("#dd").prop("disabled", true);
                $("#status").prop("disabled", true);
                //   $("#dd").val(@Session["LogedUserId"].ToString());
            }


            if ($("#nazivProjekta").val() != '') {


                $("#dugme").val("Update");
                $("#dugme").prop("type", "hidden");
                //   alert($("#level").val());


            } else {
                $("#dugme").val("Create");
                //   alert($("#dugme").val());
                $("#dugme").prop("type", "submit");
                $("#dugmeUpdate").prop("type", "hidden");

            }


            $("#registration").removeAttr("novalidate");

         //   $("#status option[value='true']").attr("selected", true);


            $.ajax({
                method: "GET",
                url: "http://localhost:59862/api/nadredjeni",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(data) {
                    var dropdown = $('#dd');

                    dropdown.empty();

                    $.each(data,
                        function(key, entry) {


                            dropdown.append($('<option></option>').attr('value', entry.id).text(entry.Ime));

                        });
                    if ("@Session["LogedUserLevel"].ToString()" == "Head") {

                        $("#dd").val(@Session["LogedUserId"].ToString());

                    } else {
                        $("#dd").val('@Html.DisplayFor(model => model.idNadredjenog).ToString()');
                    }

                },
                error: function(jqXhr) {

                    alert(jqXhr.responseText);
                }
            });

            $("#dd").change(function() {
                $("#idNadredjenog").val($("#dd").val());
                //  alert($('#idNadredjenog').val() + $('#dd').val());
            });


            $("#dugmeUpdate").click(function() {


                var podaci;
                var nadJesNije;

                if ($("#ddLevel").val() === "User") {
                    nadJesNije = $("#dd").val();
                } else {
                    nadJesNije = null;

                }
                //  alert(nadJesNije);

                podaci = {
                    id: $("#id").val(),
                    nazivProjekta: $("#nazivProjekta").val(),
                    Opis: $("#Opis").val(),
                    idNadredjenog: $("#idNadredjenog").val(),
                    //  level: $("#level").val(),
                    status: $("#status").val()
                    //  nadredjen: nadJesNije

                }

                //  alert(JSON.stringify(podaci));

                $.ajax({
                    url: 'http://localhost:59862/api/projekti/' + $("#id").val(), // your api url
                    contentType: "application/json; charset=utf-8",
                    method: "PUT",
                    data: JSON.stringify(podaci),

                    success: function() {

                        alert("Success");
                        window.location.href = '../';
                    },
                    error: function(jqXhr2) {

                        alert(jqXhr2.responseText);
                    }
                });

            });


            //$("#dugme").click(function() {
            //    alert("success");
            //});
            //  alert( $('#dd').val());
            jQuery.validator.setDefaults({
                debug: true,
                success: "valid"
            });


            $("#registration").validate({
                rules: {
                    nazivProjekta: "required",
                    Opis: "required",
                    dd: "required"

                },

                messages: {
                    nazivProjekta: "Please enter project name",
                    Opis: "Please provide project description",
                    dd: "You need to select Head for this project "

                },


                submitHandler: function(form) {
                    form.submit();
                }

            });

        });
    </script>



}