//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbAleaEntities : DbContext
    {
        public dbAleaEntities()
            : base("name=dbAleaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblAktivnosti> tblAktivnostis { get; set; }
        public virtual DbSet<tblNadredjeni> tblNadredjenis { get; set; }
        public virtual DbSet<tblProjekti> tblProjektis { get; set; }
        public virtual DbSet<tblZaposleni> tblZaposlenis { get; set; }
    
        public virtual ObjectResult<LoginByUsernamePassword_Result> LoginByUsernamePassword(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginByUsernamePassword_Result>("LoginByUsernamePassword", usernameParameter, passwordParameter);
        }
    
        public virtual int spAddEmployee(string username, string password, string ime, Nullable<int> level, Nullable<bool> status, Nullable<int> nadredjen)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var nadredjenParameter = nadredjen.HasValue ?
                new ObjectParameter("nadredjen", nadredjen) :
                new ObjectParameter("nadredjen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddEmployee", usernameParameter, passwordParameter, imeParameter, levelParameter, statusParameter, nadredjenParameter);
        }
    
        public virtual int spAddProject(Nullable<int> idNadredjenog, string nazivProjekta, string opis, string status)
        {
            var idNadredjenogParameter = idNadredjenog.HasValue ?
                new ObjectParameter("idNadredjenog", idNadredjenog) :
                new ObjectParameter("idNadredjenog", typeof(int));
    
            var nazivProjektaParameter = nazivProjekta != null ?
                new ObjectParameter("nazivProjekta", nazivProjekta) :
                new ObjectParameter("nazivProjekta", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("opis", opis) :
                new ObjectParameter("opis", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddProject", idNadredjenogParameter, nazivProjektaParameter, opisParameter, statusParameter);
        }

        public System.Data.Entity.DbSet<MVC.Models.mvcZaposleni> mvcZaposlenis { get; set; }
    }
}
